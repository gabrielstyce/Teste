// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WideWorldImporters.API.Models;

namespace WideWorldImporters.API.Migrations
{
    [DbContext(typeof(WideWorldImportersDbContext))]
    [Migration("20190909023951_Model")]
    partial class Model
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WideWorldImporters.API.Models.StockItem", b =>
                {
                    b.Property<int?>("StockItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [Sequences].[StockItemID]");

                    b.Property<string>("CodBarras")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ColorID")
                        .HasColumnType("int");

                    b.Property<string>("CustomFields")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataCadastro")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmbalagemID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("FornecedorID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("Imposto")
                        .IsRequired()
                        .HasColumnType("decimal(18, 3)");

                    b.Property<string>("InternalComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastEditedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("LeadTimeDays")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MarketingComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PacoteUnidadeID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("PrecoUnidade")
                        .IsRequired()
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("QuantityPerOuter")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("RecommendedRetailPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool?>("Refrigeracao")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("SearchDetails")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("concat([StockItemName],N' ',[MarketingComments])");

                    b.Property<string>("StockItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Tags")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("json_query([CustomFields],N'$.Tags')");

                    b.Property<string>("Tamanho")
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("TypicalWeightPerUnit")
                        .IsRequired()
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UltimaEdicao")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("StockItemID");

                    b.ToTable("StockItems","Warehouse");
                });
#pragma warning restore 612, 618
        }
    }
}
